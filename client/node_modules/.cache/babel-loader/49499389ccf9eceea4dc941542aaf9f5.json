{"ast":null,"code":"import CartActionTypes from './cart.types';\nimport { addItemToCart, removeItemFromCart } from './cart.utils';\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return { ...state,\n        hidden: !state.hidden\n      };\n\n    case CartActionTypes.ADD_ITEM:\n      return { ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      };\n\n    case CartActionTypes.REMOVE_ITEM:\n      return { ...state,\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      };\n\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      return { ...state,\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\n      };\n\n    case CartActionTypes.CLEAR_CART:\n      return { ...state,\n        cartItems: []\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["C:/Users/medra/simo-mall/client/src/redux/cart/cart.reducer.js"],"names":["CartActionTypes","addItemToCart","removeItemFromCart","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","REMOVE_ITEM","CLEAR_ITEM_FROM_CART","filter","cartItem","id","CLEAR_CART"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAAQC,aAAR,EAAsBC,kBAAtB,QAA+C,cAA/C;AACA,MAAMC,aAAa,GAAE;AACjBC,EAAAA,MAAM,EAAG,IADQ;AAEjBC,EAAAA,SAAS,EAAG;AAFK,CAArB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAuBK,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKT,eAAe,CAACU,kBAArB;AACA,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA,MAAM,EAAG,CAACG,KAAK,CAACH;AAFb,OAAP;;AAKA,SAAKJ,eAAe,CAACW,QAArB;AACA,aAAO,EACH,GAAGJ,KADA;AAEHF,QAAAA,SAAS,EAAGJ,aAAa,CAACM,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAFtB,OAAP;;AAIA,SAAKZ,eAAe,CAACa,WAArB;AACA,aAAO,EACH,GAAGN,KADA;AAEHF,QAAAA,SAAS,EAAGH,kBAAkB,CAACK,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAF3B,OAAP;;AAIA,SAAKZ,eAAe,CAACc,oBAArB;AACI,aAAO,EACH,GAAGP,KADA;AAEHF,QAAAA,SAAS,EAAGE,KAAK,CAACF,SAAN,CAAgBU,MAAhB,CAAuBC,QAAQ,IAAEA,QAAQ,CAACC,EAAT,KAAgBT,MAAM,CAACI,OAAP,CAAeK,EAAhE;AAFT,OAAP;;AAIJ,SAAKjB,eAAe,CAACkB,UAArB;AACI,aAAO,EACH,GAAGX,KADA;AAEHF,QAAAA,SAAS,EAAG;AAFT,OAAP;;AAIJ;AAAU,aAAOE,KAAP;AA3BV;AA6BH,CA9BD;;AA+BA,eAAeD,WAAf","sourcesContent":["import CartActionTypes from './cart.types';\r\nimport {addItemToCart,removeItemFromCart} from './cart.utils';\r\nconst INITIAL_STATE ={\r\n    hidden : true,\r\n    cartItems : []\r\n}\r\n\r\nconst cartReducer = (state = INITIAL_STATE,action) => {\r\n    switch (action.type) {\r\n    case CartActionTypes.TOGGLE_CART_HIDDEN : \r\n    return { \r\n        ...state,\r\n        hidden : !state.hidden,\r\n        \r\n    };\r\n    case CartActionTypes.ADD_ITEM :\r\n    return {\r\n        ...state,\r\n        cartItems : addItemToCart(state.cartItems, action.payload)\r\n    };\r\n    case CartActionTypes.REMOVE_ITEM :\r\n    return {\r\n        ...state,\r\n        cartItems : removeItemFromCart(state.cartItems, action.payload)\r\n    };\r\n    case CartActionTypes.CLEAR_ITEM_FROM_CART :\r\n        return {\r\n            ...state,\r\n            cartItems : state.cartItems.filter(cartItem=>cartItem.id !== action.payload.id)\r\n        };\r\n    case CartActionTypes.CLEAR_CART :\r\n        return {\r\n            ...state,\r\n            cartItems : []\r\n        }\r\n    default : return state;\r\n}\r\n}\r\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}