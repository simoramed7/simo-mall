{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\medra\\\\simo-mall\\\\client\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport './sign-in.styles.scss';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \" I already have an account \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \" Sign in with your email and password. \"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    handleChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"Passeword\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \" SIGN IN \"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Sign in with Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/medra/simo-mall/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React , {useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\r\nimport './sign-in.styles.scss';\r\n\r\nconst SignIn = ({emailSignInStart,googleSignInStart}) => {\r\n\r\nconst [userCredentials,setCredentials] = useState({email : '', password : ''}); \r\nconst {email,password} = userCredentials;\r\n\r\nconst handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n\r\n    emailSignInStart(email,password);\r\n    };\r\n\r\nconst handleChange = event =>{\r\nconst {name,value} = event.target;\r\nsetCredentials({...userCredentials, [name]:value})\r\n\r\n};\r\n   \r\nreturn (\r\n    <div className='sign-in'>\r\n        <h2> I already have an account </h2>\r\n        <span> Sign in with your email and password. </span>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n\r\n        <FormInput name='email' type='email' value={email}\r\n         handleChange={handleChange} label='Email' required />\r\n     \r\n        <FormInput name='password' type= 'password' value={password} \r\n        handleChange={handleChange} label='Passeword' required />\r\n        \r\n        <div className='buttons'>\r\n            <CustomButton type= 'submit'> SIGN IN </CustomButton>\r\n            <CustomButton type= 'button' onClick={googleSignInStart} isGoogleSignIn>\r\n              Sign in with Google\r\n            </CustomButton>\r\n        </div>\r\n        \r\n\r\n        </form>\r\n    </div>\r\n)\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    googleSignInStart : () => dispatch(googleSignInStart()),\r\n    emailSignInStart : (email,password) => dispatch( emailSignInStart({email,password}) )\r\n})\r\n\r\nexport default connect(null,mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}