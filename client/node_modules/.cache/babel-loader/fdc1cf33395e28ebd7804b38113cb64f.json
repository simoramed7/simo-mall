{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\medra\\\\simo-mall\\\\src\\\\App.js\";\nimport React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCurrentUser } from './redux/user/user.selectors';\nimport { checkUserSession } from './redux/user/user.actions'; // import { selectCollectionsForPreview } from './redux/shop/shop.selectors';\n\nimport Header from './components/header/header.component';\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport SignInUpPage from './pages/sign-in-up/sign-in-up.component';\nimport CheckoutPage from './pages/checkout/checkout.component';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsbscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    const {\n      checkUserSession\n    } = this.props;\n    checkUserSession(); //this.unsbscribeFromAuth = auth.onAuthStateChanged(async userAuth => { \n    //  if(userAuth){\n    //    const userRef = await createUserProfileDocument(userAuth);\n    //    userRef.onSnapshot(snapShot =>{\n    //     setCurrentUser ({\n    //          id: snapShot.id,\n    //          ...snapShot.data()\n    //        })\n    //    });\n    //  }\n    //  else setCurrentUser( userAuth );\n    // addCollectionAndDocuments('collections',collectionsArray.map( ({title,items}) => ({title,items}) ));\n    //  } )\n  }\n\n  componentWillUnmount() {\n    this.unsbscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/checkout\",\n      component: CheckoutPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/Signin\",\n      render: () => this.props.currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 48\n        }\n      }) : /*#__PURE__*/React.createElement(SignInUpPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 71\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser // collectionsArray : selectCollectionsForPreview\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/medra/simo-mall/src/App.js"],"names":["React","Switch","Route","Redirect","connect","createStructuredSelector","selectCurrentUser","checkUserSession","Header","HomePage","ShopPage","SignInUpPage","CheckoutPage","App","Component","unsbscribeFromAuth","componentDidMount","props","componentWillUnmount","render","currentUser","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAeC,KAAf,EAAqBC,QAArB,QAAoC,kBAApC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AAEA,SAAQC,iBAAR,QAAgC,6BAAhC;AACA,SAAQC,gBAAR,QAA+B,2BAA/B,C,CAEA;;AAEA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,YAAP,MAAyB,yCAAzB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AAIA,OAAO,WAAP;;AAGA,MAAMC,GAAN,SAAkBb,KAAK,CAACc,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAElCC,kBAFkC,GAEd,IAFc;AAAA;;AAIlCC,EAAAA,iBAAiB,GAAE;AAClB,UAAM;AAACT,MAAAA;AAAD,QAAqB,KAAKU,KAAhC;AACAV,IAAAA,gBAAgB,GAFE,CAInB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACE;AAEF;AACC;;AAEDW,EAAAA,oBAAoB,GAAE;AACpB,SAAKH,kBAAL;AACD;;AACDI,EAAAA,MAAM,GAAE;AACL,wBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAGV,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAqB,MAAA,SAAS,EAAGC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,WAAlB;AAA8B,MAAA,SAAS,EAAGE,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAII,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,SAAlB;AACI,MAAA,MAAM,EAAG,MAAK,KAAKK,KAAL,CAAWG,WAAX,gBAAyB,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAzB,gBAAgD,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAFA,CADG;AAaF;;AA5CiC;;AA8ClC,MAAMC,eAAe,GAAGhB,wBAAwB,CAAC;AAC/Ce,EAAAA,WAAW,EAAEd,iBADkC,CAE/C;;AAF+C,CAAD,CAAhD;;AAIA,MAAMgB,kBAAkB,GAAGC,QAAQ,KAAI;AACrChB,EAAAA,gBAAgB,EAAG,MAAMgB,QAAQ,CAAChB,gBAAgB,EAAjB;AADI,CAAJ,CAAnC;;AAGA,eAAeH,OAAO,CAAEiB,eAAF,EAAkBC,kBAAlB,CAAP,CAA6CT,GAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport {Switch,Route,Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {createStructuredSelector} from 'reselect';\r\n\r\nimport {selectCurrentUser} from './redux/user/user.selectors';\r\nimport {checkUserSession} from './redux/user/user.actions'\r\n\r\n// import { selectCollectionsForPreview } from './redux/shop/shop.selectors';\r\n\r\nimport Header from './components/header/header.component';\r\nimport HomePage from './pages/homepage/homepage.component';\r\nimport ShopPage from './pages/shop/shop.component';\r\nimport SignInUpPage from './pages/sign-in-up/sign-in-up.component';\r\nimport CheckoutPage from './pages/checkout/checkout.component';\r\n\r\n\r\n\r\nimport './App.css';\r\n\r\n\r\nclass App extends React.Component {\r\n\r\nunsbscribeFromAuth =null;\r\n\r\ncomponentDidMount(){\r\n const {checkUserSession} = this.props;\r\n checkUserSession();\r\n\r\n//this.unsbscribeFromAuth = auth.onAuthStateChanged(async userAuth => { \r\n//  if(userAuth){\r\n//    const userRef = await createUserProfileDocument(userAuth);\r\n\r\n//    userRef.onSnapshot(snapShot =>{\r\n//     setCurrentUser ({\r\n//          id: snapShot.id,\r\n//          ...snapShot.data()\r\n//        })\r\n      \r\n//    });\r\n    \r\n//  }\r\n//  else setCurrentUser( userAuth );\r\n  // addCollectionAndDocuments('collections',collectionsArray.map( ({title,items}) => ({title,items}) ));\r\n \r\n//  } )\r\n}\r\n\r\ncomponentWillUnmount(){\r\n  this.unsbscribeFromAuth();\r\n}\r\nrender(){\r\n   return (\r\n<div>\r\n<Header />\r\n<Switch>\r\n    <Route exact path='/' component= {HomePage} />\r\n    <Route  path='/shop' component= {ShopPage} />\r\n    <Route exact path='/checkout' component= {CheckoutPage} />\r\n    <Route exact path='/Signin' \r\n        render ={()=> this.props.currentUser? (<Redirect to='/'/>) : (<SignInUpPage/> )} />\r\n</Switch>\r\n\r\n</div>\r\n  );\r\n}\r\n}\r\nconst mapStateToProps = createStructuredSelector({\r\n  currentUser: selectCurrentUser,\r\n  // collectionsArray : selectCollectionsForPreview\r\n})\r\nconst mapDispatchToProps = dispatch =>({\r\n  checkUserSession : () => dispatch(checkUserSession())\r\n})\r\nexport default connect (mapStateToProps,mapDispatchToProps)(App);\r\n"]},"metadata":{},"sourceType":"module"}