{"ast":null,"code":"import shopActionType from './shop.types';\nimport { firestore, convertCollectionsSnapShotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: shopActionType.FETCH_COLLECTIONS_START\n});\nexport const fetchCollctionsSuccess = collectionsMap => ({\n  type: shopActionType.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollctionsFailure = errorMessage => ({\n  type: shopActionType.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapShotToMap(snapshot);\n      dispatch(fetchCollctionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollctionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["C:/Users/medra/simo-mall/client/src/redux/shop/shop.actions.js"],"names":["shopActionType","firestore","convertCollectionsSnapShotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollctionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollctionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,cAA3B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAGJ,cAAc,CAACK;AADkB,CAAP,CAA9B;AAIP,OAAO,MAAMC,sBAAsB,GAAGC,cAAc,KAAK;AACrDH,EAAAA,IAAI,EAAGJ,cAAc,CAACQ,yBAD+B;AAErDC,EAAAA,OAAO,EAAGF;AAF2C,CAAL,CAA7C;AAKP,OAAO,MAAMG,sBAAsB,GAAGC,YAAY,KAAK;AACnDP,EAAAA,IAAI,EAAGJ,cAAc,CAACY,yBAD6B;AAEnDH,EAAAA,OAAO,EAAGE;AAFyC,CAAL,CAA3C;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC5C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAAEX,qBAAqB,EAAvB,CAAR;AAEAY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACnC,YAAMZ,cAAc,GAAGL,+BAA+B,CAACiB,QAAD,CAAtD;AACCL,MAAAA,QAAQ,CAAER,sBAAsB,CAACC,cAAD,CAAxB,CAAR;AACD,KAHF,EAGIa,KAHJ,CAGUC,KAAK,IAAIP,QAAQ,CAAEJ,sBAAsB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAH3B;AAIH,GARD;AASH,CAVM","sourcesContent":["import shopActionType from './shop.types';\r\nimport {firestore, convertCollectionsSnapShotToMap} from '../../firebase/firebase.utils';\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n    type : shopActionType.FETCH_COLLECTIONS_START\r\n});\r\n\r\nexport const fetchCollctionsSuccess = collectionsMap => ({\r\n    type : shopActionType.FETCH_COLLECTIONS_SUCCESS,\r\n    payload : collectionsMap\r\n});\r\n\r\nexport const fetchCollctionsFailure = errorMessage => ({\r\n    type : shopActionType.FETCH_COLLECTIONS_FAILURE,\r\n    payload : errorMessage\r\n});\r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n    return dispatch => {\r\n        const collectionRef = firestore.collection('collections');\r\n        dispatch( fetchCollectionsStart() );\r\n\r\n        collectionRef.get().then(snapshot => {\r\n          const collectionsMap = convertCollectionsSnapShotToMap(snapshot);\r\n           dispatch( fetchCollctionsSuccess(collectionsMap) );\r\n         }).catch(error => dispatch( fetchCollctionsFailure(error.message) ));\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}