{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\medra\\\\simo-mall\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport './sign-in.styles.scss';\n\nclass SignIn extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        emailSignInStart\n      } = this.props;\n      const {\n        email,\n        password\n      } = this.state;\n      emailSignInStart(email, password);\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, \" I already have an account \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, \" Sign in with your email and password. \"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      handleChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"Passeword\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, \" SIGN IN \"), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, \"Sign in with Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/medra/simo-mall/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","Component","constructor","handleSubmit","event","preventDefault","props","email","password","state","handleChange","name","value","target","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\r\nimport './sign-in.styles.scss';\r\n\r\nclass SignIn extends React.Component{\r\nconstructor(){\r\n    super();\r\n\r\n    this.state={\r\n        email : '',\r\n        password : ''}\r\n    \r\n}\r\n\r\nhandleSubmit = async event => {\r\n    event.preventDefault();\r\n    const {emailSignInStart} = this.props;\r\n    const {email,password} = this.state;\r\n\r\n    emailSignInStart(email,password);\r\n    };\r\n\r\nhandleChange = event =>{\r\nconst {name,value} = event.target;\r\nthis.setState({[name]:value})\r\n\r\n};\r\nrender(){\r\n    const {googleSignInStart}=this.props;\r\nreturn (\r\n    <div className='sign-in'>\r\n        <h2> I already have an account </h2>\r\n        <span> Sign in with your email and password. </span>\r\n\r\n        <form onSubmit={this.handleSubmit}>\r\n\r\n        <FormInput name='email' type='email' value={this.state.email}\r\n         handleChange={this.handleChange} label='Email' required />\r\n     \r\n        <FormInput name='password' type= 'password' value={this.state.password} \r\n        handleChange={this.handleChange} label='Passeword' required />\r\n        \r\n        <div className='buttons'>\r\n            <CustomButton type= 'submit'> SIGN IN </CustomButton>\r\n            <CustomButton type= 'button' onClick={googleSignInStart} isGoogleSignIn>\r\n              Sign in with Google\r\n            </CustomButton>\r\n        </div>\r\n        \r\n\r\n        </form>\r\n    </div>\r\n)\r\n}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    googleSignInStart : () => dispatch(googleSignInStart()),\r\n    emailSignInStart : (email,password) => dispatch( emailSignInStart({email,password}) )\r\n})\r\n\r\nexport default connect(null,mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}