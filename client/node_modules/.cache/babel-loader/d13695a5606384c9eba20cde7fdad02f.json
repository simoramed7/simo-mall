{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\medra\\\\simo-mall\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport './sign-up.styles.scss';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, setCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Password don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \" I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \" Sign up with you email and password \"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \" SIGN UP \")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/medra/simo-mall/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUp","userCredentials","setCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React , {useState} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport {signUpStart} from '../../redux/user/user.actions';\r\nimport './sign-up.styles.scss';\r\n\r\nconst SignUp = ({signUpStart}) => {\r\nconst [userCredentials,setCredentials] = useState({\r\n    displayName :'',\r\n    email:'',\r\n    password:'',\r\n    confirmPassword:''});\r\nconst {displayName,email,password,confirmPassword} = userCredentials;\r\n\r\nconst handleSubmit = async event =>{\r\n    event.preventDefault();\r\n    if(password !== confirmPassword){\r\n    alert(\"Password don't match\");\r\n    return;\r\n    }\r\n    signUpStart({displayName,email,password});\r\n\r\n};\r\n\r\nconst handleChange = event =>{\r\n    const {name,value}=event.target;\r\n    setCredentials({...userCredentials, [name]:value });\r\n}\r\n    return (\r\n        <div className='sign-up'>\r\n            <h2 className='title'> I do not have an account</h2>\r\n            <span> Sign up with you email and password </span>\r\n            <form className='sign-up-form' onSubmit={handleSubmit}>\r\n                <FormInput \r\n                    type= 'text'\r\n                    name= 'displayName'\r\n                    value= {displayName}\r\n                    onChange= {handleChange}\r\n                    label= 'Display Name'\r\n                    required\r\n                />\r\n                    <FormInput \r\n                    type= 'email'\r\n                    name= 'email'\r\n                    value= {email}\r\n                    onChange= {handleChange}\r\n                    label= 'Email'\r\n                    required\r\n                />\r\n                    <FormInput \r\n                    type= 'password'\r\n                    name= 'password'\r\n                    value= {password}\r\n                    onChange= {handleChange}\r\n                    label= 'Password'\r\n                    required\r\n                />\r\n                    <FormInput \r\n                    type= 'password'\r\n                    name= 'confirmPassword'\r\n                    value= {confirmPassword}\r\n                    onChange= {handleChange}\r\n                    label= 'Confirm Password'\r\n                    required\r\n                />\r\n                <CustomButton type ='submit'> SIGN UP </CustomButton>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUpStart : userCredentials => dispatch(signUpStart(userCredentials))\r\n})\r\n\r\nexport default connect(null,mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}