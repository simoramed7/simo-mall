{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyAZx5jSC6jiGiS_V7JLvpOhrTcU79iBJow\",\n  authDomain: \"simo-mall-db.firebaseapp.com\",\n  databaseURL: \"https://simo-mall-db.firebaseio.com\",\n  projectId: \"simo-mall-db\",\n  storageBucket: \"simo-mall-db.appspot.com\",\n  messagingSenderId: \"1042277001535\",\n  appId: \"1:1042277001535:web:c30b5cc6f4cabd21cc0b8a\",\n  measurementId: \"G-XBSG9W87N5\"\n};\nexport const createUserProfileDocument = async (userAuth, additionnalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionnalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n}; // This part of code was added to download data_shop to firebase, once done we remove it \n//export const addCollectionAndDocuments = async (collectionKey,objectsToAdd) => {\n//const collectionRef = firestore.collection(collectionKey);\n// const batch = firestore.batch();\n//objectsToAdd.forEach(obj => {\n// const newDocRef = collectionRef.doc();\n// batch.set(newDocRef,obj);\n// });\n// return await batch.commit();\n//};\n\nfirebase.initializeApp(config);\nexport const convertCollectionsSnapShotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/medra/simo-mall/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionnalData","userRef","firestore","doc","uid","snapshot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","convertCollectionsSnapShotToMap","collections","transformedCollection","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","accumulator","collection","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,8BAFD;AAGXC,EAAAA,WAAW,EAAE,qCAHF;AAIXC,EAAAA,SAAS,EAAE,cAJA;AAKXC,EAAAA,aAAa,EAAE,0BALJ;AAMXC,EAAAA,iBAAiB,EAAE,eANR;AAOXC,EAAAA,KAAK,EAAE,4CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;AAWE,OAAO,MAAMC,yBAAyB,GAAG,OAAMC,QAAN,EAAgBC,eAAhB,KAAoC;AAC3E,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AACA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAoB;AAClB,UAAK;AAACC,MAAAA,WAAD;AAAaC,MAAAA;AAAb,QAAoBV,QAAzB;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAG;AACDV,MAAAA,OAAO,CAACW,GAAR,CAAY;AACVJ,QAAAA,WADU;AAEVC,QAAAA,KAFU;AAGVC,QAAAA,SAHU;AAIV,WAAGV;AAJO,OAAZ;AAOD,KARD,CAQE,OAAMa,KAAN,EAAY;AAAEC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCF,KAAK,CAACG,OAAxC;AAAkD;AAEnE;;AACD,SAAOf,OAAP;AACC,CApBI,C,CAsBL;AACA;AACE;AACD;AACC;AACC;AACA;AACF;AACA;AACD;;AAEFb,QAAQ,CAAC6B,aAAT,CAAuB5B,MAAvB;AAEA,OAAO,MAAM6B,+BAA+B,GAAIC,WAAD,IAAiB;AAC9D,QAAMC,qBAAqB,GAAGD,WAAW,CAACE,IAAZ,CAAiBC,GAAjB,CAAsBnB,GAAG,IAAI;AAC1D,UAAM;AAAEoB,MAAAA,KAAF;AAAQC,MAAAA;AAAR,QAAiBrB,GAAG,CAACsB,IAAJ,EAAvB;AACA,WAAO;AACLC,MAAAA,SAAS,EAAGC,SAAS,CAACJ,KAAK,CAACK,WAAN,EAAD,CADhB;AAELC,MAAAA,EAAE,EAAG1B,GAAG,CAAC0B,EAFJ;AAGLN,MAAAA,KAHK;AAILC,MAAAA;AAJK,KAAP;AAMA,GAR6B,CAA9B;AASA,SAAOJ,qBAAqB,CAACU,MAAtB,CAA6B,CAACC,WAAD,EAAaC,UAAb,KAA4B;AAC9DD,IAAAA,WAAW,CAACC,UAAU,CAACT,KAAX,CAAiBK,WAAjB,EAAD,CAAX,GAA8CI,UAA9C;AACA,WAAOD,WAAP;AACD,GAHM,EAGL,EAHK,CAAP;AAID,CAdM;AAeP,OAAO,MAAME,IAAI,GAAG7C,QAAQ,CAAC6C,IAAT,EAAb;AACP,OAAO,MAAM/B,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMgC,QAAQ,GAAG,IAAI9C,QAAQ,CAAC6C,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe9C,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyAZx5jSC6jiGiS_V7JLvpOhrTcU79iBJow\",\r\n    authDomain: \"simo-mall-db.firebaseapp.com\",\r\n    databaseURL: \"https://simo-mall-db.firebaseio.com\",\r\n    projectId: \"simo-mall-db\",\r\n    storageBucket: \"simo-mall-db.appspot.com\",\r\n    messagingSenderId: \"1042277001535\",\r\n    appId: \"1:1042277001535:web:c30b5cc6f4cabd21cc0b8a\",\r\n    measurementId: \"G-XBSG9W87N5\"\r\n  };\r\n\r\n  export const createUserProfileDocument = async(userAuth, additionnalData) => {\r\n    if(!userAuth) return;\r\n    \r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n    const snapshot = await userRef.get();\r\n    if(!snapshot.exists){\r\n      const{displayName,email}=userAuth;\r\n      const createdAt = new Date();\r\n      try{\r\n        userRef.set({\r\n          displayName,\r\n          email,\r\n          createdAt,\r\n          ...additionnalData\r\n        })\r\n\r\n      } catch(error){ console.log('error creating user',error.message);}\r\n      \r\n    }\r\n    return userRef;\r\n    };\r\n\r\n    // This part of code was added to download data_shop to firebase, once done we remove it \r\n    //export const addCollectionAndDocuments = async (collectionKey,objectsToAdd) => {\r\n      //const collectionRef = firestore.collection(collectionKey);\r\n     // const batch = firestore.batch();\r\n      //objectsToAdd.forEach(obj => {\r\n       // const newDocRef = collectionRef.doc();\r\n       // batch.set(newDocRef,obj);\r\n     // });\r\n     // return await batch.commit();\r\n    //};\r\n\r\n  firebase.initializeApp(config);\r\n  \r\n  export const convertCollectionsSnapShotToMap = (collections) => {\r\n    const transformedCollection = collections.docs.map( doc => {\r\n     const { title,items }= doc.data();\r\n     return {\r\n       routeName : encodeURI(title.toLowerCase()),\r\n       id : doc.id,\r\n       title,\r\n       items\r\n     }; \r\n    })\r\n    return transformedCollection.reduce((accumulator,collection) => {\r\n      accumulator[collection.title.toLowerCase()] = collection;\r\n      return accumulator;\r\n    },{} )\r\n  };\r\n  export const auth = firebase.auth();\r\n  export const firestore = firebase.firestore();\r\n  \r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  provider.setCustomParameters({ prompt: 'select_account' });\r\n  export const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n  \r\n  export default firebase;"]},"metadata":{},"sourceType":"module"}