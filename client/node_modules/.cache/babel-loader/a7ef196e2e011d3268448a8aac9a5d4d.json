{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { googleProvider, auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure } from './user.actions';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["C:/Users/medra/simo-mall/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","googleProvider","auth","createUserProfileDocument","signInSuccess","signInFailure","signInWithGoogle","user","signInWithPopup","userRef","userSnapShot","get","id","data","error","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAsBC,GAAtB,EAA2BC,GAA3B,EAAgCC,IAAhC,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,cAAR,EAAwBC,IAAxB,EAA8BC,yBAA9B,QAA8D,+BAA9D;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA8C,gBAA9C;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AACpC,MAAG;AACC,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAML,IAAI,CAACM,eAAL,CAAqBP,cAArB,CAArB;AACA,UAAMQ,OAAO,GAAG,MAAMV,IAAI,CAACI,yBAAD,EAA2BI,IAA3B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAAEO,aAAa,CAAC;AAAEQ,MAAAA,EAAE,EAACF,YAAY,CAACE,EAAlB;AAAqB,SAAGF,YAAY,CAACG,IAAb;AAAxB,KAAD,CAAf,CAAT;AACC,GALL,CAKM,OAAOC,KAAP,EAAc;AACZ,UAAMjB,GAAG,CAAEQ,aAAa,CAACS,KAAD,CAAf,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,eAAV,CAA2B;AAACC,EAAAA,OAAO,EAAG;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP;AAAX,CAA3B,EAA0D;AAC7D,MAAG;AACC,UAAM;AAACX,MAAAA;AAAD,QAAS,MAAML,IAAI,CAACiB,0BAAL,CAAgCF,KAAhC,EAAsCC,QAAtC,CAArB;AACA,UAAMT,OAAO,GAAG,MAAMV,IAAI,CAACI,yBAAD,EAA2BI,IAA3B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAAEO,aAAa,CAAC;AAAEQ,MAAAA,EAAE,EAACF,YAAY,CAACE,EAAlB;AAAqB,SAAGF,YAAY,CAACG,IAAb;AAAxB,KAAD,CAAf,CAAT;AACC,GALL,CAKM,OAAOC,KAAP,EAAc;AACZ,UAAMjB,GAAG,CAAEQ,aAAa,CAACS,KAAD,CAAf,CAAT;AACH;AACJ;AAEL,OAAO,UAAUM,mBAAV,GAAgC;AACnC,QAAMxB,UAAU,CAACI,eAAe,CAACqB,oBAAjB,EAAsCf,gBAAtC,CAAhB;AACH;AAED,OAAO,UAAUgB,kBAAV,GAA+B;AAClC,QAAM1B,UAAU,CAACI,eAAe,CAACuB,mBAAjB,EAAsCR,eAAtC,CAAhB;AACH;AAED,OAAO,UAAUS,SAAV,GAAqB;AACxB,QAAM1B,GAAG,CAAC,CAAEC,IAAI,CAACqB,mBAAD,CAAN,EAA4BrB,IAAI,CAACuB,kBAAD,CAAhC,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest , put, all, call} from 'redux-saga/effects';\r\nimport UserActionTypes from './user.types';\r\nimport {googleProvider, auth, createUserProfileDocument} from '../../firebase/firebase.utils';\r\nimport { signInSuccess, signInFailure  } from './user.actions';\r\n\r\nexport function* signInWithGoogle() {\r\ntry{\r\n    const {user} = yield auth.signInWithPopup(googleProvider);\r\n    const userRef = yield call(createUserProfileDocument,user);\r\n    const userSnapShot = yield userRef.get();\r\n    yield put (signInSuccess({ id:userSnapShot.id,...userSnapShot.data() }) );\r\n    } catch (error) {\r\n        yield put( signInFailure(error) );\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail( {payload : {email,password}} ) {\r\n    try{\r\n        const {user} = yield auth.signInWithEmailAndPassword(email,password);\r\n        const userRef = yield call(createUserProfileDocument,user);\r\n        const userSnapShot = yield userRef.get();\r\n        yield put (signInSuccess({ id:userSnapShot.id,...userSnapShot.data() }) );\r\n        } catch (error) {\r\n            yield put( signInFailure(error) );\r\n        }\r\n    }\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START,signInWithGoogle )\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START ,signInWithEmail )\r\n}\r\n\r\nexport function* userSagas(){\r\n    yield all([ call(onGoogleSignInStart),call(onEmailSignInStart) ]);\r\n}"]},"metadata":{},"sourceType":"module"}